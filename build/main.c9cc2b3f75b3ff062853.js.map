{"version":3,"sources":["webpack:///./js/task-1.js"],"names":["delay","ms","setTimeout","logger","Promise","resolve","time","console","log","then"],"mappings":"2JAAMA,EAAQ,SAAAC,GAUV,OANAC,YAAW,WACCC,EAAOF,KAIhBA,GACIG,QAAQC,WAIbF,EAAS,SAAAG,GAAI,OAAIC,QAAQC,IAAR,kBAA8BF,EAA9B,OAGvBN,EAAM,KAAMS,KAAKN,GACjBH,EAAM,KAAMS,KAAKN,GACjBH,EAAM,MAAMS,KAAKN,K","file":"main.c9cc2b3f75b3ff062853.js","sourcesContent":["const delay = ms => {\r\n    // Твой код\r\n    // const time = logger(time);\r\n    \r\n    setTimeout(() => {\r\n            if (logger(ms)) {\r\n            // logger()\r\n                // return Promise.resolve();\r\n        }\r\n    }, ms);\r\n    return Promise.resolve();\r\n    \r\n};\r\n\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\n// Вызовы функции для проверки\r\ndelay(2000).then(logger); // Resolved after 2000ms\r\ndelay(1000).then(logger); // Resolved after 1000ms\r\ndelay(1500).then(logger); // Resolved after 1500ms\r\n\r\n// const getMessage = function () {\r\n//   const input = prompt('Введите сообщение');\r\n\r\n//   return Promise.resolve(input);\r\n// };\r\n\r\n// const logger = message => console.log(message);\r\n\r\n// getMessage().then(message => logger(message));\r\n\r\n// // Или еще короче\r\n// getMessage().then(logger);"],"sourceRoot":""}